// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: proto/v1/service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels              map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Priority            uint32                 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	ShardKey            string                 `protobuf:"bytes,5,opt,name=shard_key,json=shardKey,proto3" json:"shard_key,omitempty"`
	CreatedUtc          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_utc,json=createdUtc,proto3" json:"created_utc,omitempty"`
	DueUtc              *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=due_utc,json=dueUtc,proto3" json:"due_utc,omitempty"`
	AssignedUntilUtc    *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=assigned_until_utc,json=assignedUntilUtc,proto3" json:"assigned_until_utc,omitempty"`
	RetryUtc            *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=retry_utc,json=retryUtc,proto3" json:"retry_utc,omitempty"`
	Attempt             uint32                 `protobuf:"varint,20,opt,name=attempt,proto3" json:"attempt,omitempty"`
	AssignedWorker      string                 `protobuf:"bytes,21,opt,name=assigned_worker,json=assignedWorker,proto3" json:"assigned_worker,omitempty"`
	HookUrl             string                 `protobuf:"bytes,30,opt,name=hook_url,json=hookUrl,proto3" json:"hook_url,omitempty"`
	HookMethod          string                 `protobuf:"bytes,41,opt,name=hook_method,json=hookMethod,proto3" json:"hook_method,omitempty"`
	HookHeaders         map[string]string      `protobuf:"bytes,42,rep,name=hook_headers,json=hookHeaders,proto3" json:"hook_headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HookBody            []byte                 `protobuf:"bytes,43,opt,name=hook_body,json=hookBody,proto3" json:"hook_body,omitempty"`
	DeliveredUtc        *timestamppb.Timestamp `protobuf:"bytes,50,opt,name=delivered_utc,json=deliveredUtc,proto3" json:"delivered_utc,omitempty"`
	DeliveredStatusCode uint32                 `protobuf:"varint,51,opt,name=delivered_status_code,json=deliveredStatusCode,proto3" json:"delivered_status_code,omitempty"`
	DeliveredErr        string                 `protobuf:"bytes,52,opt,name=delivered_err,json=deliveredErr,proto3" json:"delivered_err,omitempty"`
}

func (x *Timer) Reset() {
	*x = Timer{}
	mi := &file_proto_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *Timer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Timer) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Timer) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Timer) GetShardKey() string {
	if x != nil {
		return x.ShardKey
	}
	return ""
}

func (x *Timer) GetCreatedUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedUtc
	}
	return nil
}

func (x *Timer) GetDueUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.DueUtc
	}
	return nil
}

func (x *Timer) GetAssignedUntilUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedUntilUtc
	}
	return nil
}

func (x *Timer) GetRetryUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.RetryUtc
	}
	return nil
}

func (x *Timer) GetAttempt() uint32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *Timer) GetAssignedWorker() string {
	if x != nil {
		return x.AssignedWorker
	}
	return ""
}

func (x *Timer) GetHookUrl() string {
	if x != nil {
		return x.HookUrl
	}
	return ""
}

func (x *Timer) GetHookMethod() string {
	if x != nil {
		return x.HookMethod
	}
	return ""
}

func (x *Timer) GetHookHeaders() map[string]string {
	if x != nil {
		return x.HookHeaders
	}
	return nil
}

func (x *Timer) GetHookBody() []byte {
	if x != nil {
		return x.HookBody
	}
	return nil
}

func (x *Timer) GetDeliveredUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveredUtc
	}
	return nil
}

func (x *Timer) GetDeliveredStatusCode() uint32 {
	if x != nil {
		return x.DeliveredStatusCode
	}
	return 0
}

func (x *Timer) GetDeliveredErr() string {
	if x != nil {
		return x.DeliveredErr
	}
	return ""
}

type GetTimerArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTimerArgs) Reset() {
	*x = GetTimerArgs{}
	mi := &file_proto_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimerArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimerArgs) ProtoMessage() {}

func (x *GetTimerArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimerArgs.ProtoReflect.Descriptor instead.
func (*GetTimerArgs) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTimerArgs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTimerArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListTimersArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Selector string                 `protobuf:"bytes,3,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *ListTimersArgs) Reset() {
	*x = ListTimersArgs{}
	mi := &file_proto_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTimersArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimersArgs) ProtoMessage() {}

func (x *ListTimersArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimersArgs.ProtoReflect.Descriptor instead.
func (*ListTimersArgs) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListTimersArgs) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *ListTimersArgs) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ListTimersArgs) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

type DeleteTimerArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteTimerArgs) Reset() {
	*x = DeleteTimerArgs{}
	mi := &file_proto_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTimerArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimerArgs) ProtoMessage() {}

func (x *DeleteTimerArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimerArgs.ProtoReflect.Descriptor instead.
func (*DeleteTimerArgs) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteTimerArgs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTimerArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTimersArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	MatchLabels map[string]string      `protobuf:"bytes,3,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeleteTimersArgs) Reset() {
	*x = DeleteTimersArgs{}
	mi := &file_proto_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTimersArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimersArgs) ProtoMessage() {}

func (x *DeleteTimersArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimersArgs.ProtoReflect.Descriptor instead.
func (*DeleteTimersArgs) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTimersArgs) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *DeleteTimersArgs) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *DeleteTimersArgs) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

type ListTimersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timers []*Timer `protobuf:"bytes,1,rep,name=timers,proto3" json:"timers,omitempty"`
}

func (x *ListTimersResponse) Reset() {
	*x = ListTimersResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTimersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimersResponse) ProtoMessage() {}

func (x *ListTimersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimersResponse.ProtoReflect.Descriptor instead.
func (*ListTimersResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListTimersResponse) GetTimers() []*Timer {
	if x != nil {
		return x.Timers
	}
	return nil
}

type IdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdentifierResponse) Reset() {
	*x = IdentifierResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifierResponse) ProtoMessage() {}

func (x *IdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifierResponse.ProtoReflect.Descriptor instead.
func (*IdentifierResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *IdentifierResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_v1_service_proto protoreflect.FileDescriptor

var file_proto_v1_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x06, 0x0a, 0x05, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x74, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x74, 0x63, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x75, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x75, 0x65, 0x55,
	0x74, 0x63, 0x12, 0x48, 0x0a, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75,
	0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x55, 0x74, 0x63, 0x12, 0x37, 0x0a, 0x09,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x55, 0x74, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6f, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x68, 0x6f, 0x6f, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x75, 0x74,
	0x63, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x55, 0x74,
	0x63, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x45, 0x72, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x48, 0x6f, 0x6f, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x35,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x47, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xa1, 0x02, 0x0a, 0x06, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x1a, 0x16, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x13, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x14, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11,
	0x73, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_service_proto_rawDescOnce sync.Once
	file_proto_v1_service_proto_rawDescData = file_proto_v1_service_proto_rawDesc
)

func file_proto_v1_service_proto_rawDescGZIP() []byte {
	file_proto_v1_service_proto_rawDescOnce.Do(func() {
		file_proto_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_service_proto_rawDescData)
	})
	return file_proto_v1_service_proto_rawDescData
}

var file_proto_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_v1_service_proto_goTypes = []any{
	(*Timer)(nil),                 // 0: v1.Timer
	(*GetTimerArgs)(nil),          // 1: v1.GetTimerArgs
	(*ListTimersArgs)(nil),        // 2: v1.ListTimersArgs
	(*DeleteTimerArgs)(nil),       // 3: v1.DeleteTimerArgs
	(*DeleteTimersArgs)(nil),      // 4: v1.DeleteTimersArgs
	(*ListTimersResponse)(nil),    // 5: v1.ListTimersResponse
	(*IdentifierResponse)(nil),    // 6: v1.IdentifierResponse
	nil,                           // 7: v1.Timer.LabelsEntry
	nil,                           // 8: v1.Timer.HookHeadersEntry
	nil,                           // 9: v1.DeleteTimersArgs.MatchLabelsEntry
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_proto_v1_service_proto_depIdxs = []int32{
	7,  // 0: v1.Timer.labels:type_name -> v1.Timer.LabelsEntry
	10, // 1: v1.Timer.created_utc:type_name -> google.protobuf.Timestamp
	10, // 2: v1.Timer.due_utc:type_name -> google.protobuf.Timestamp
	10, // 3: v1.Timer.assigned_until_utc:type_name -> google.protobuf.Timestamp
	10, // 4: v1.Timer.retry_utc:type_name -> google.protobuf.Timestamp
	8,  // 5: v1.Timer.hook_headers:type_name -> v1.Timer.HookHeadersEntry
	10, // 6: v1.Timer.delivered_utc:type_name -> google.protobuf.Timestamp
	10, // 7: v1.ListTimersArgs.after:type_name -> google.protobuf.Timestamp
	10, // 8: v1.ListTimersArgs.before:type_name -> google.protobuf.Timestamp
	10, // 9: v1.DeleteTimersArgs.after:type_name -> google.protobuf.Timestamp
	10, // 10: v1.DeleteTimersArgs.before:type_name -> google.protobuf.Timestamp
	9,  // 11: v1.DeleteTimersArgs.matchLabels:type_name -> v1.DeleteTimersArgs.MatchLabelsEntry
	0,  // 12: v1.ListTimersResponse.timers:type_name -> v1.Timer
	0,  // 13: v1.Timers.CreateTimer:input_type -> v1.Timer
	2,  // 14: v1.Timers.ListTimers:input_type -> v1.ListTimersArgs
	1,  // 15: v1.Timers.GetTimer:input_type -> v1.GetTimerArgs
	3,  // 16: v1.Timers.DeleteTimer:input_type -> v1.DeleteTimerArgs
	4,  // 17: v1.Timers.DeleteTimers:input_type -> v1.DeleteTimersArgs
	6,  // 18: v1.Timers.CreateTimer:output_type -> v1.IdentifierResponse
	5,  // 19: v1.Timers.ListTimers:output_type -> v1.ListTimersResponse
	0,  // 20: v1.Timers.GetTimer:output_type -> v1.Timer
	11, // 21: v1.Timers.DeleteTimer:output_type -> google.protobuf.Empty
	11, // 22: v1.Timers.DeleteTimers:output_type -> google.protobuf.Empty
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_v1_service_proto_init() }
func file_proto_v1_service_proto_init() {
	if File_proto_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_service_proto_goTypes,
		DependencyIndexes: file_proto_v1_service_proto_depIdxs,
		MessageInfos:      file_proto_v1_service_proto_msgTypes,
	}.Build()
	File_proto_v1_service_proto = out.File
	file_proto_v1_service_proto_rawDesc = nil
	file_proto_v1_service_proto_goTypes = nil
	file_proto_v1_service_proto_depIdxs = nil
}
